//  Firestore rules for device reads/writes

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Relay states subcollection
      match /relay_states/{relayId} {
        // Devices and authenticated users belonging to the same userId may read
        allow read: if request.auth != null && request.auth.uid == userId;

        // Writes should be restricted to trusted server principals or admin tokens
        // Example: allow write from Cloud Functions service account by checking custom claim
        allow write: if request.auth != null && (
          // Replace with your admin claim or service account uid
          request.auth.token.admin == true
          || request.auth.uid == 'cloud-function-service-account-uid'
        );
      }

      // Appliances collection: allow authenticated user to read and modify their own appliances
      match /appliances/{applianceId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Notifications: allow the user to read their notifications and write (create/update archive)
      match /notifications/{notificationId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && request.auth.uid == userId;
        allow update: if request.auth != null && request.auth.uid == userId;
        allow delete: if request.auth != null && request.auth.uid == userId;
      }

      // Settings: allow user to update settings, but restrict master_power writes if desired
      match /settings/{settingId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Deny everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
