rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to access top-level collections
    match /appliances/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    
    match /electricity_usage/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /rooms/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Rule for user-specific kwh_usage document
    match /users/{userId}/kwh_usage {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rule for the new user-level yearly_usage structure (for aggregated totals)
    match /users/{userId}/yearly_usage/{path=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rule for user-specific summary_usage SUBCOLLECTION (old structure - can be deprecated)
    match /users/{userId}/summary_usage/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // User-specific rules from the existing configuration
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rule for user-specific relay_states subcollection
    match /users/{userId}/relay_states/{relayId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId}/appliances/{applianceId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      allow create: if request.auth != null && request.auth.uid == userId
                    && request.resource.data.applianceName is string
                    && request.resource.data.roomName is string
                    && request.resource.data.deviceType is string
                    // Relay is only required and must be a string if deviceType is 'Socket'
                    && (request.resource.data.deviceType == 'Socket' ? request.resource.data.relay is string : true)
                    && request.resource.data.icon is number
                    && request.resource.data.kwh is number
                    && request.resource.data.applianceStatus is string // Expecting 'ON' or 'OFF'
                    && request.resource.data.startTime is string // Ensure these are present and strings
                    && request.resource.data.endTime is string
                    && request.resource.data.days is list
                    && request.resource.data.presentHourlyusage is number; // Ensure this is a number

      // Rules for the new electricity usage data structure
      match /yearly_usage/{yearId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;

        match /monthly_usage/{monthId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;

          match /week_usage/{weekId} {
            allow read, write: if request.auth != null && request.auth.uid == userId;

            match /day_usage/{dayId} {
              allow read, write: if request.auth != null && request.auth.uid == userId;
            }
          }
        }
      }
    }

    match /users/{userId}/personal_information/{infoId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId}/usage/{usageId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rule for user-specific Rooms subcollection
    match /users/{userId}/Rooms/{roomId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow creation with basic data validation
      allow create: if request.auth != null && request.auth.uid == userId
                    && request.resource.data.roomName is string
                    && request.resource.data.icon is number
                    && request.resource.data.createdAt is timestamp;
    }
  }
}
